name: CI
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Lilia
        with:
          path: lilia
      - uses: leafo/gh-actions-lua@v8
        name: Set Up Lua
        with:
          luaVersion: "5.2"
      - uses: leafo/gh-actions-luarocks@v4
        name: Set Up Luarocks
      - name: Install Dependencies
        run: |
          luarocks install luafilesystem
          luarocks install argparse
      - uses: actions/checkout@v3
        name: Pull GluaCheck
        with:
          repository: LiliaFramework/GluaCheck
          path: luacheck
      - name: Build GluaCheck
        working-directory: luacheck
        run: luarocks make
      - name: Run Luacheck
        working-directory: lilia
        run: |
          luacheck . \
            --no-redefined \
            --no-global --no-self \
            --no-max-line-length \
            --no-max-code-line-length \
            --no-max-string-line-length \
            --no-max-comment-line-length \
            --no-max-cyclomatic-complexity

  release:
    needs: linter
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: lilia
      - name: Remove Release & Tag
        uses: actions/github-script@v6
        with:
          script: |
            const tag = 'release';
            try {
              const rel = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag
              });
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: rel.data.id
              });
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${tag}`
              });
            } catch (error) {
              if (error.status !== 404) throw error;
            }
      - name: Package
        run: |
          mkdir packaged
          cp -R lilia packaged/lilia
          cd packaged
          zip -r ../lilia.zip lilia
      - id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: release
          release_name: Lilia
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lilia.zip
          asset_name: lilia.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-pages:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: code
      - uses: actions/checkout@v3
        with:
          repository: LiliaFramework/LiliaFramework.github.io
          token: ${{ secrets.PAGES_PAT }}
          path: site
          persist-credentials: false
      - run: |
          rm -rf site/*
          cp -R code/docs/. site/
      - run: |
          git -C site config user.email "githubactions@github.com"
          git -C site config user.name "GitHub Actions"
          if [ -n "$(git -C site status --porcelain)" ]; then
            git -C site add .
            git -C site commit -m "Update docs"
            git -C site push origin HEAD
          fi
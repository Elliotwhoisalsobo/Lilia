name: CI
on:
  push:
permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write
jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Lilia Repository
        with:
          path: lilia
      - uses: leafo/gh-actions-lua@v8.0.0
        name: Set Up Lua
        with:
          luaVersion: "5.2"
      - uses: leafo/gh-actions-luarocks@v4.0.0
        name: Set Up Luarocks
      - name: Install Luacheck dependencies
        run: |
          luarocks install luafilesystem
          luarocks install argparse
      - uses: actions/checkout@v3
        name: Pull GluaCheck
        with:
          repository: LiliaFramework/GluaCheck
          path: luacheck
      - name: Build GluaCheck
        working-directory: luacheck
        run: luarocks make
      - name: Run Luacheck Linting
        working-directory: lilia
        run: |
          luacheck . \
            --no-redefined \
            --no-global --no-self \
            --no-max-line-length --no-max-code-line-length \
            --no-max-string-line-length --no-max-comment-line-length \
            --no-max-cyclomatic-complexity

  release:
    needs: linter
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Lilia Repository
        with:
          path: lilia
      - name: Remove existing release & tag (if any)
        uses: actions/github-script@v6
        with:
          script: |
            const tag = 'release';
            try {
              const rel = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag
              });
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: rel.data.id
              });
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${tag}`
              });
            } catch (error) {
              if (error.status !== 404) throw error;
            }
      - name: Prepare and Zip
        run: |
          mkdir packaged
          cp -R lilia packaged/lilia
          cd packaged
          zip -r ../lilia.zip lilia
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: release
          release_name: Lilia
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lilia.zip
          asset_name: lilia.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-sync:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: code
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Sync liliastackcode
        working-directory: code
        run: |
          mkdir -p files
          curl -sL https://raw.githubusercontent.com/bleonheart/Useful-Python-Scripts/main/files/liliastack.py -o files/liliastack.py
          sed -i "s|, default=.*)|)|" files/liliastack.py
          mkdir -p docs
          python files/liliastack.py -s ../lilia -o docs/liliastackcode.lua
          git config user.email "githubactions@github.com"
          git config user.name "GitHub Actions"
          if [ -n "$(git status --porcelain)" ]; then
            git add docs/liliastackcode.lua
            git commit -m "Update liliastackcode.lua"
            git push
          fi
          rm -f *.zip
name: CI
on: [push, pull_request]

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Lilia Repository
        with:
          path: lilia

      - uses: leafo/gh-actions-lua@v8.0.0
        name: Set Up Lua
        with:
          luaVersion: "5.2"

      - uses: leafo/gh-actions-luarocks@v4.0.0
        name: Set Up Luarocks

      - uses: actions/checkout@v3
        name: Pull GluaCheck
        with:
          repository: LiliaFramework/GluaCheck
          path: luacheck

      - name: Build GluaCheck
        working-directory: luacheck
        run: luarocks make

      - name: Run Luacheck Linting
        working-directory: lilia
        run: |
          luacheck . \
            --no-redefined \
            --no-global --no-self \
            --no-max-line-length --no-max-code-line-length \
            --no-max-string-line-length --no-max-comment-line-length \
            --no-max-cyclomatic-complexity

  formatter:
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - uses: actions/checkout@v3
        name: Checkout Lilia Repository
        with:
          path: lilia

      - name: Download and Install GLuaLint
        run: |
          curl -L -o glualint.zip https://github.com/FPtje/GLuaFixer/releases/download/1.29.0/glualint-1.29.0-x86_64-linux.zip
          unzip glualint.zip -d glualint_folder
          chmod +x glualint_folder/glualint
          sudo mv glualint_folder/glualint /usr/local/bin
          rm -rf glualint.zip glualint_folder

      - name: Run GLuaLint Pretty Print
        working-directory: lilia
        run: glualint --config glualint.json --pretty-print-files .

      - name: Configure Git
        run: |
          git config --global user.email "githubactions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.LiliaGitSecret }}
        working-directory: lilia
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Pretty Printed"
            git push https://${{ secrets.LiliaGitSecret }}@github.com/${{ github.repository }}.git HEAD:main
          else
            echo "No changes to commit"
          fi

  release:
    needs: formatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Lilia Repository
        with:
          path: lilia

      - name: Remove existing release & tag (if any)
        uses: actions/github-script@v6
        with:
          script: |
            const tag = 'release';
            try {
              const rel = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag
              });
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: rel.data.id
              });
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${tag}`
              });
              core.info(`Deleted existing release & tag "${tag}"`);
            } catch (error) {
              if (error.status === 404) {
                core.info('No existing release/tag to delete');
              } else {
                throw error;
              }
            }

      - name: Prepare and Zip
        run: |
          mkdir packaged
          cp -R lilia packaged/lilia
          cd packaged
          zip -r ../lilia.zip lilia

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: release
          release_name: Lilia
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lilia.zip
          asset_name: lilia.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}